const toggle=document.querySelector(".sidebar-toggle"),sidebar=document.querySelector(".sidebar"),hrBtn=document.getElementById("Hr-btn"),dlBtn=document.getElementById("Dl-btn"),slider=document.querySelector(".slider"),weatherTabs=document.querySelectorAll(".weather-tabs"),API_KEY="3bd69578ab43c1a20c22ec17a6931867",temperatureElem=document.getElementById("temperature"),locationElem=document.getElementById("location"),detailsElem=document.getElementById("details"),iconElem=document.getElementById("icon"),cloudinessElem=document.getElementById("cloudiness"),humidityElem=document.getElementById("humidity"),windspeedElem=document.getElementById("wind-speed"),searchBtn=document.querySelector(".search-btn"),cityInput=document.getElementById("city-input"),locationList=document.querySelector(".locationList");let hourlyData=[],dailyData=[],isHourlySelected=!0;const fetchWeatherData=async e=>{let t=`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=${API_KEY}&units=metric`;try{let a=await fetch(t);if(!a.ok)throw Error("Network response was not ok");let r=await a.json();console.log(r),displayWeatherData(r),updateBg(r)}catch(l){console.error("Fetching data problem",l)}},fetchWeatherDataByCoords=async(e,t)=>{let a=`https://api.openweathermap.org/data/2.5/weather?lat=${e}&lon=${t}&appid=${API_KEY}&units=metric`,r=`https://api.openweathermap.org/data/2.5/forecast?lat=${e}&lon=${t}&appid=${API_KEY}&units=metric`;try{let[l,o]=await Promise.all([fetch(a),fetch(r)]);if(!l.ok||!o.ok)throw Error("Network response was not ok");let i=await l.json(),n=await o.json();console.log(i),console.log(n),displayWeatherData(i),hourlyData=n.list.filter((e,t)=>t<8),dailyData=n.list.filter((e,t)=>t%8==0).slice(0,5),updateTabs(),updateBg(i)}catch(s){console.error("Fetching data problem",s)}},displayWeatherData=e=>{temperatureElem.textContent=`${e.main.temp}\xb0`,locationElem.textContent=e.name,detailsElem.textContent=`${new Date().toLocaleTimeString()} - ${new Date().toLocaleDateString()}`,iconElem.innerHTML=`<i class="fa-solid fa-${weatherIcons(e.weather[0].main)}"></i> ${e.weather[0].description}`,cloudinessElem.textContent=`${e.clouds.all}%`,humidityElem.textContent=`${e.main.humidity}%`,windspeedElem.textContent=`${e.wind.speed}km/h`},weatherIcons=e=>{let t={Clear:"sun",Clouds:"cloud",Rain:"cloud-rain",Drizzle:"cloud-showers-heavy",Thunderstorm:"bolt",Snow:"snowflake",Mist:"smog",Smoke:"smog",Haze:"smog",Dust:"smog",Fog:"smog",Sand:"smog",Ash:"smog",Squall:"wind",Tornado:"wind"};return t[e]||"sun"},bgimage={Clear:"url('Clear.jpg')",Clouds:"url('cloudy.jpg')",Thunderstorm:"url('thunderstorm.jpg')",Snow:"url('snow.jpg')",Haze:"url('hazy.jpg')",Fog:"url('fog.jpg')",Rain:"url('rainy.jpg')",Default:"url('Clear.jpg')"},updateBg=e=>{let t=e.weather[0].main,a=document.body;a.style.backgroundImage=bgimage[t]||bgimage.Default},fetchHourlyAndDailyData=async e=>{let t=`https://api.openweathermap.org/data/2.5/forecast?q=${e}&appid=${API_KEY}&units=metric`;try{let a=await fetch(t);if(!a.ok)throw Error("Network response was not ok");let r=await a.json();console.log(r),hourlyData=r.list.filter((e,t)=>t<8),dailyData=r.list.filter((e,t)=>t%8==0).slice(0,5),isHourlySelected?updateTabs(hourlyData,"hourly"):updateTabs(dailyData,"daily")}catch(l){console.error("Fetching data problem",l)}},updateTabs=()=>{let e=isHourlySelected?hourlyData:dailyData,t=e.length;weatherTabs.forEach((a,r)=>{r<t?(a.style.opacity=0,a.style.transform="translateX(20px)",setTimeout(()=>{a.style.display="block";let t=e[r];isHourlySelected?a.innerHTML=`
                        <h1>${new Date(t.dt_txt).toLocaleTimeString([],{hour:"numeric",hour12:!0})}</h1>
                        <figure>
                            <img src="https://openweathermap.org/img/wn/${t.weather[0].icon}.png" alt="weather icon">
                        </figure>
                        <p>${t.main.temp_max}\xb0</p>
                        <p>${t.main.temp_min}\xb0</p>`:a.innerHTML=`
                        <h1>${new Date(t.dt_txt).toLocaleDateString(void 0,{weekday:"short",day:"numeric"})}</h1>
                        <figure>
                            <img src="https://openweathermap.org/img/wn/${t.weather[0].icon}.png" alt="weather icon">
                        </figure>
                        <p>${t.main.temp_max}\xb0</p>
                        <p>${t.main.temp_min}\xb0</p>`,setTimeout(()=>{a.style.opacity=1,a.style.transform="translateX(0)"},350)},350)):a.style.display="none"})};navigator.geolocation?navigator.geolocation.getCurrentPosition(e=>{let{latitude:t,longitude:a}=e.coords;fetchWeatherDataByCoords(t,a)},e=>{console.error("Error getting location",e),fetchWeatherData("London")}):(console.error("Geolocation is not supported by this browser."),fetchWeatherData("London"));const saveCity=e=>{let t=JSON.parse(localStorage.getItem("cities"))||[];t.includes(e)||t.push(e),t.length>4&&t.shift(),localStorage.setItem("cities",JSON.stringify(t)),updateCity()},updateCity=()=>{let e=JSON.parse(localStorage.getItem("cities"))||[];locationList.innerHTML="",e.forEach(e=>{let t=document.createElement("li");t.textContent=e,locationList.appendChild(t)})};updateCity(),saveCity(),toggle.addEventListener("click",()=>{sidebar.classList.toggle("sidebar-open"),toggle.classList.toggle("toggle-rotate"),toggle.style.right=sidebar.classList.contains("sidebar-open")?"24rem":"2rem"}),hrBtn.addEventListener("click",e=>{e.preventDefault(),slider.style.transform="translateX(0)",cityInput.value,isHourlySelected=!0,updateTabs()}),dlBtn.addEventListener("click",e=>{e.preventDefault(),slider.style.transform="translateX(100%)",cityInput.value,isHourlySelected=!1,updateTabs()}),searchBtn.addEventListener("click",e=>{e.preventDefault();let t=cityInput.value;fetchWeatherData(t),fetchHourlyAndDailyData(t),saveCity(t)});